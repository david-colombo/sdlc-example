# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@v1.4.5
        with:
          egress-policy: audit
      - name: Checkout
        uses: actions/checkout@v2.4.2
        with:
          # Repository name with owner. For example, actions/checkout
          repository: ${{ github.repository }}
          token: ${{ github.token }}
          # Relative path under $GITHUB_WORKSPACE to place the repository
          path: ./
          # Whether to execute `git clean -ffdx && git reset --hard HEAD` before fetching
          clean: true
          # Number of commits to fetch. 0 indicates all history for all branches and tags.
          fetch-depth: 1
          # Whether to download Git-LFS files
          # lfs: # optional
          # Whether to checkout submodules: `true` to checkout submodules or `recursive` to recursively checkout submodules.
          #submodules: # optional
          # Add repository path as safe.directory for Git global config by running `git config --global --add safe.directory <path>`
          set-safe-directory: true
      - name: Build Jekyll for GitHub Pages
        uses: actions/jekyll-build-pages@v1.0.5
        with:
          # Directory where the source files reside.
          source: ./
          # Output directory of the build. Although it can be nested inside the source, it cannot be the same as the source directory.
          destination: ./_site
          # The SHA-1 of the git commit for which the build is running. Default to GITHUB_SHA.
          build_revision: ${{ github.sha }}
          # Verbose output
          verbose: true
          # GitHub token
          token: ${{ github.token }}
      - name: Cache site
        id: cache-site
        uses: actions/cache@v2
        with:
          path: /github/workspace/_site/
          key: 1-site
          
  telemetry:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Emit Telemretry GitHub Pages
        uses: actions/deploy-pages@v1.0.9
        with:
          # Should this action only emit build telemetry instead of deploying the build artifact?
          emit_telemetry: true
          
  upload:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Get cached site
        id: get-cached-site
        uses: actions/cache@v2
        with:
          path: ./_site
          key: 1-site
      - name: Check cached site
        if: steps.get-cached-site.outputs.cache-hit != 'true'
        run: exit 1
      - name: Upload GitHub Pages artifact
        uses: actions/upload-pages-artifact@v1.0.3
        with:
          # Path of the directory containing the static assets.
          path: ./_site
          # Duration after which artifact will expire in days.
          retention-days: 1
  
  deploy:
    needs: upload
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy GitHub Pages site
        uses: actions/deploy-pages@v1.0.9
        with:
          # Should this action only emit build telemetry instead of deploying the build artifact?
          emit_telemetry: false
          # GitHub token
          token: ${{ github.token }}
          # Time in milliseconds after which to timeout and cancel the deployment (default: 10 minutes)
          timeout: 600000
          # Maximum number of status report errors before cancelling a deployment (default: 10)
          error_count: 10
          # Time in milliseconds between two deployment status report (default: 5 seconds)
          reporting_interval: 5000
          # Name of the artifact to deploy
          artifact_name: github-pages
